package net.mv.meuespaco.model.estoque;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.enterprise.inject.Vetoed;
import javax.persistence.Column;
import javax.persistence.Convert;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import net.mv.meuespaco.converter.LocalDateTimeDBConverter;
import net.mv.meuespaco.model.Produto;
import net.mv.meuespaco.model.Usuario;
import net.mv.meuespaco.model.grade.Grade;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : pcp
//  @ File Name : Movimento.java
//  @ Date : 15/09/2015
//  @ Author : Sidronio Lima
//
//	Retirado o campo Unidade.
//
@Entity
@Table(name="movimento")
@Vetoed
public class Movimento implements Serializable {

	private static final long serialVersionUID = 2928310317648979739L;
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long codigo;
	
	@Convert(converter=LocalDateTimeDBConverter.class)
	@Column(name="horario", columnDefinition="DATETIME")
	private LocalDateTime horario;
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="almoxarifado_codigo")
	private Almoxarifado almoxarifado;
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="produto_codigo")
	private Produto produto;
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="grade_codigo")
	private Grade grade;
	
	private BigDecimal qtd;
	
	@Enumerated(EnumType.STRING)
	private OrigemMovimento origem;

	@Enumerated(EnumType.STRING)
	@Column(name="tipo_movimento")
	private TipoMovimento tipoMovimento;
	
	@ManyToOne
	@JoinColumn(name="usuario_codigo")
	private Usuario usuario;
	
	private String motivo;
	
	public Movimento() {
		this.horario = LocalDateTime.now();
	}
	
	public Movimento(OrigemMovimento origem) {
		this();
		this.origem = origem;
	}
	
	public Movimento(Produto produto, BigDecimal qtd, OrigemMovimento origem, TipoMovimento tipoMovimento) {
		
		this();
		
		this.produto = produto;
		this.qtd = qtd;
		this.origem = origem;
		this.tipoMovimento = tipoMovimento;
	}
	
	/**
	 * Cria um movimento pelo Produto e Grade.
	 * 
	 * @param produto
	 * @param grade
	 */
	public Movimento(Produto produto, Grade grade) {
		this();
		this.produto = produto;
		this.grade = grade;
	}
	
	/**
	 * Atualiza o hor√°rio para o formato correto.
	 */
	public void atualizaHorario() {
		//this.novoHorario = horario;
	}

	public Long getCodigo() {
		return codigo;
	}
	public void setCodigo(Long codigo) {
		this.codigo = codigo;
	}

	public LocalDateTime getHorario() {
		return horario;
	}
	public void setHorario(LocalDateTime horario) {
		this.horario = horario;
	}

	public Almoxarifado getAlmoxarifado() {
		return almoxarifado;
	}
	public void setAlmoxarifado(Almoxarifado almoxarifado) {
		this.almoxarifado = almoxarifado;
	}

	public Produto getProduto() {
		return produto;
	}
	public void setProduto(Produto produto) {
		this.produto = produto;
	}
	
	/**
	 * @return the grade
	 */
	public Grade getGrade() {
		return grade;
	}
	/**
	 * @param grade the grade to set
	 */
	public void setGrade(Grade grade) {
		this.grade = grade;
	}

	public BigDecimal getQtd() {
		return qtd;
	}
	public void setQtd(BigDecimal qtd) {
		this.qtd = qtd;
	}

	public OrigemMovimento getOrigem() {
		return origem;
	}
	public void setOrigem(OrigemMovimento origem) {
		this.origem = origem;
	}

	public TipoMovimento getTipoMovimento() {
		return tipoMovimento;
	}
	public void setTipoMovimento(TipoMovimento tipoMovimento) {
		this.tipoMovimento = tipoMovimento;
	}
	
	public Usuario getUsuario() {
		return usuario;
	}
	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	public String getMotivo() {
		return motivo;
	}
	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}
	
	/*
	public LocalDateTime getNovoHorario() {
		return novoHorario;
	}
	public void setNovoHorario(LocalDateTime novoHorario) {
		this.novoHorario = novoHorario;
	}*/

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Movimento other = (Movimento) obj;
		if (codigo == null) {
			if (other.codigo != null)
				return false;
		} else if (!codigo.equals(other.codigo))
			return false;
		return true;
	}

}
